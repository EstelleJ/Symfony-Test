# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.region:
        class: App\Admin\RegionAdmin
        arguments: [~, App\Entity\Region, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Localisations, label: Region }
        public: true

    admin.departement:
        class: App\Admin\DepartementAdmin
        arguments: [~, App\Entity\Departement, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Localisations, label: Departement }
        public: true

    admin.ville:
        class: App\Admin\VilleAdmin
        arguments: [~, App\Entity\Ville, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Localisations, label: Ville }
        public: true

    admin.coiffeur:
        class: App\Admin\CoiffeurAdmin
        arguments: [~, App\Entity\Coiffeur, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Coiffeurs, label: Coiffeurs, on_top: true }
        public: true
